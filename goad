#!/bin/bash
set -e

# Where is this script located?
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$DIR"
export GOPATH="$PWD"/.gopath/
export BASEDIR="$PWD"

# subsection arg?
[ -z "$2" ] && SUBSECTION="./..." || SUBSECTION="./$2"

# Project details
name="gosh"
pkg="github.com/polydawn/$name"



if [ -z "$1" ] ; then
	(
		go fmt "$SUBSECTION"
		go install "$pkg" && {
			echo -e "\E[1;32minstall successful.\E[0;m\n"
		} || {
			echo -e "\E[1;41minstall failed!\E[0;m"
			exit 8
		}
		go test "$SUBSECTION" && {
			echo -e "\n\E[1;32mall tests green.\E[0;m"
		} || {
			echo -e "\n\E[1;41msome tests failed!\E[0;m"
			exit 4
		}
	)
else
	case "$1" in
	-)
		# passthrough for other commands
		shift
		go "$@"
		;;
	env)
		echo "GOROOT=`go env GOROOT`"
		echo "GOPATH=`go env GOPATH`"
		;;
	path)
		echo "$GOPATH"
		;;
	init)
		# it's your responsibility to do this the first time
		# (we don't do it at the front of every build because it will move submodules if you already have them, and that might not be what you want as you're plowing along)
		git submodule update --init
		;;
	test)
		set +e ; shift ; shift ; set -e
		go test -i "$SUBSECTION" "$@" &&
		go test -v "$SUBSECTION" "$@" && {
			echo -e "\n\E[1;32mall tests green.\E[0;m"
		} || {
			echo -e "\n\E[1;41msome tests failed!\E[0;m"
			exit 4
		}
		;;
	install)
		go install "$pkg"
		;;
	fmt)
		go fmt "$SUBSECTION"
		;;
	doc)
		for package in $(go list "$SUBSECTION" | sed "s#^_${PWD}#${pkg}#"); do
			echo -e "==== $package ====\n"
			godoc "$package"
			echo -e "\n\n\n"
		done
		;;
	convey)
		shift
		go install github.com/smartystreets/goconvey && "$GOPATH"/bin/goconvey "$@"
		;;
	cover)
		coverFile="$GOPATH/tmp/cover/cover.out"
		mkdir -p "$(dirname "$coverFile")"
		for package in $(go list "$SUBSECTION" | sed "s#^_${PWD}#${pkg}#"); do
			rm -f "$coverFile"
			echo "==== $package ===="
			go test -coverprofile="$coverFile" "$package" && \
			[ -f "$coverFile" ] && \
			echo ---- && \
			go tool cover -func="$coverFile" && \
			echo ---- && \
			go tool cover -html="$coverFile"
			echo ====
			echo
		done
		rm -f "$coverFile"
		;;
	validate)
		# run all validations and exit non-zero after all of them if any fail
		validators=()
		validators+=("./contrib/validate-dco")
		validators+=("./contrib/validate-gofmt")
		invalid=""
		for validator in ${validators[@]}; do
			echo -e "\E[1;34m==== checking $validator ... ====\E[0;m"
			"$validator" && {
				echo -e "\E[1;32mpassed.\E[0;m"
			} || {
				echo -e "\E[1;31mfailed!\E[0;m"
				invalid="true"
			}
			echo
			echo
		done
		echo
		[ -z "$invalid" ] && {
			echo -e "\E[1;32mall validations green.\E[0;m"
		} || {
			echo -e "\E[1;41msome validations failed!\E[0;m"
			exit 6
		}
		;;
	clean)
		rm -rf "$GOPATH/bin" "$GOPATH/pkg" "$GOPATH/tmp"
		;;
	*)
		echo "Usage: $0 {init|test|install|fmt|doc|cover|validate|clean}" 1>&2;
		exit 1
	;;
esac

fi
